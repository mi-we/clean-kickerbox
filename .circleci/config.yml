version: 2.1
orbs:
  openjdk-install: cloudesire/openjdk-install@1.2.3
jobs:
  build:
    machine: true
    resource_class: medium
    working_directory: ~/kickerbox
    environment:
      GRAALVM_HOME: /home/circleci/.graalvm
    steps:
      - checkout

        # Install OpenJdk
      - openjdk-install/openjdk:
          version: 11

      # Standard maven build and test phases - does not perform a native build (or verify)
      - run:
          name: Build (Standard)
          command: ./gradlew build -xtest
      - run:
          name: Verify (Standard)
          command: ./gradlew test

      # Install GraalVM and native-image, needed for a native Quarkus build
      - run:
          name: Install GraalVM
          command: |
            curl https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.0.0/graalvm-ce-java11-linux-amd64-20.0.0.tar.gz -O -J -L
            tar xfz graalvm-ce-java11-linux-amd64-20.0.0.tar.gz
            mv graalvm-ce-java11-20.0.0 /home/circleci/.graalvm
            rm graalvm-ce-java11-linux-amd64-20.0.0.tar.gz
      - run:
          name: Install native-image
          command: $GRAALVM_HOME/bin/gu install native-image

      # Perform a native Quarkus build and verify

      - run:
          name: Build and Verify (Native)
          command: ./gradlew :kickerbox-server:testNative
          no_output_timeout: 30m

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      - run:
          name: Build native docker image
          command: docker build -f kickerbox-server/src/main/docker/Dockerfile.heroku -t mi-we/kickerbox:$CIRCLE_SHA1 .
        
      - run:
          name: Push to heroku
          command: |
            docker login --username=$HEROKU_LOGIN --password $HEROKU_API_KEY registry.heroku.com
            docker tag mi-we/kickerbox:$CIRCLE_SHA1 registry.heroku.com/kickerbox/web
            docker push registry.heroku.com/kickerbox/web